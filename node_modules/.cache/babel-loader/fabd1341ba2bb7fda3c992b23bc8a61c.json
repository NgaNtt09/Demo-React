{"ast":null,"code":"import _classCallCheck from \"/Users/ndvn/Desktop/CRUD/managerment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ndvn/Desktop/CRUD/managerment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ndvn/Desktop/CRUD/managerment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ndvn/Desktop/CRUD/managerment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ndvn/Desktop/CRUD/managerment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ndvn/Desktop/CRUD/managerment/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport TaskList from './components/TaskList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onGenered = function () {\n      var tasks = [{\n        id: _this.generateID(),\n        name: \"Học React\",\n        status: true\n      }, {\n        id: _this.generateID(),\n        name: \"Học ReactJS\",\n        status: false\n      }, {\n        id: _this.generateID(),\n        name: \"Học ReactNative\",\n        status: true\n      }];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      console.log(tasks);\n    };\n\n    _this.onToggetForm = function () {\n      _this.setState({\n        isDisplayForm: !_this.state.isDisplayForm\n      });\n    };\n\n    _this.onExitForm = function () {\n      _this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    _this.onSubmit = function (name, status) {\n      console.log(status);\n    };\n\n    _this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      datas: []\n    };\n    return _this;\n  } //được gọi khi refresh trang\n\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage && localStorage.getItem('tasks')) {\n        var tasks = JSON.parse(localStorage.getItem('tasks'));\n        this.setState({\n          tasks: tasks\n        });\n        console.log(tasks);\n      }\n    }\n  }, {\n    key: \"randomString\",\n    value: function randomString() {\n      return Math.floor((1 + Math.random()) * 0x1000).toString(16).substring(1);\n    }\n  }, {\n    key: \"generateID\",\n    value: function generateID() {\n      return this.randomString() + this.randomString() + '-%' + this.randomString() + '-' + this.randomString() + '$-' + this.randomString();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayForm = _this$state.isDisplayForm; //# var tasks = this.state.tasks\n\n      var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n        onExitForm: this.onExitForm,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, elmTaskForm), React.createElement(\"div\", {\n        className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggetForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), \" \\xA0\", React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: this.onGenered,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Generate\"), React.createElement(TaskControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        tasks: tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/ndvn/Desktop/CRUD/managerment/src/App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","App","props","onGenered","tasks","id","generateID","name","status","localStorage","setItem","JSON","stringify","console","log","onToggetForm","setState","isDisplayForm","state","onExitForm","onSubmit","datas","getItem","parse","Math","floor","random","toString","substring","randomString","elmTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm'\nimport TaskControl from './components/TaskControl'\nimport TaskList from './components/TaskList'\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.state={\n        tasks: [],\n        isDisplayForm: false,\n        datas:[]\n        \n    }\n  }\n  //được gọi khi refresh trang\n  componentWillMount(){\n    if(localStorage&&localStorage.getItem('tasks')){\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n          tasks:tasks\n      });\n      console.log(tasks);\n    }\n  }\n  onGenered=()=>{\n    var tasks=[{\n      id: this.generateID(),\n      name: \"Học React\",\n      status: true,\n    },\n    {\n      id: this.generateID(),\n      name: \"Học ReactJS\",\n      status: false,\n    },\n    {\n      id: this.generateID(),\n      name: \"Học ReactNative\",\n      status: true,\n    },\n  ]\n  localStorage.setItem('tasks',JSON.stringify(tasks));\n  console.log(tasks);\n  }\n  randomString(){\n    return Math.floor((1+Math.random())*0x1000).toString(16).substring(1);\n  }\n  generateID(){\n    return (this.randomString()+this.randomString()+'-%'+this.randomString()\n    +'-'+this.randomString()+'$-'+this.randomString());\n  }\n  onToggetForm=()=>{\n    this.setState({\n        isDisplayForm : !this.state.isDisplayForm\n    });\n  }\n  onExitForm=()=>{\n    this.setState({\n      isDisplayForm : false\n  });\n  }\n  onSubmit=(name,status)=>{\n    console.log(status);\n    \n\n  }\n  render() {\n    var {tasks,isDisplayForm}=this.state;//# var tasks = this.state.tasks\n    var elmTaskForm = isDisplayForm ? <TaskForm \n    onExitForm={this.onExitForm}\n    onSubmit={this.onSubmit}/>:'';\n    return (\n    <div className=\"container\">\n      <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1><hr/>\n      </div>\n      <div className=\"row\">\n            <div className= {isDisplayForm?'col-xs-4 col-sm-4 col-md-4 col-lg-4':''} >\n              {/* Form */}\n             {elmTaskForm}\n          </div>\n          <div className={isDisplayForm?'col-xs-8 col-sm-8 col-md-8 col-lg-8':'col-xs-12 col-sm-12 col-md-12 col-lg-12'}>\n              <button type=\"button\" className=\"btn btn-primary\"  onClick={this.onToggetForm}>\n                  <span className=\"fa fa-plus mr-5\"></span>\n                  Thêm Công Việc\n              </button> &nbsp;\n              <button type=\"button\" className=\"btn btn-danger\" onClick={this.onGenered}>\n                 Generate\n              </button>\n              {/* Search - Sort */}\n              <TaskControl />\n              {/* List */}\n              <TaskList tasks={tasks}/>\n          </div>\n      </div>\n   </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}